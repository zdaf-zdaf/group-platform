name: group-pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
    test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend # 仍然指定后端目录
    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # 【重要】必须改成你们项目使用的Python版本，例如3.9, 3.11等

      - name:  Install dependencies with pip
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt # 【重要】确保backend目录下有requirements.txt文件

      - name:  Run Django tests
        run: python manage.py test # 【核心】这是运行Django单元测试的标准命令
        env:
          DJANGO_SETTINGS_MODULE: server # 【重要】设置Django配置模块
          # 通常需要设置数据库连接等环境变量，例如用于测试的SQLite：
          DATABASE_URL: sqlite:///test.db
          # 或其他任何你们测试需要的环境变量

    test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install frontend dependencies
        run: npm ci

      - name: Run frontend unit tests
        run: npm test

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: [test-backend] # 只有后端测试通过了，才做这个工作
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/backend:latest
            ghcr.io/${{ github.repository_owner }}/backend:${{ github.sha }}

    build-and-push-frontend:
    runs-on: ubuntu-latest
    needs: [test-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/frontend:latest
            ghcr.io/${{ github.repository_owner }}/frontend:${{ github.sha }}

    notify-deployment-ready:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-frontend] # 等所有镜像都推送成功
    steps:
      - name: Notify Team
        run: |
          echo " CI/CD 流水线成功完成！"
          echo "所有Docker镜像已推送至 GitHub Container Registry。"
          echo "请成员C在本地执行以下命令进行部署："
          echo "kubectl apply -f k8s-manifests/"