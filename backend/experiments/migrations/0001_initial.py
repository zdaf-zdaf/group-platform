# Generated by Django 5.2.1 on 2025-06-08 04:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChoiceProblem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="问题描述")),
                ("options", models.JSONField(verbose_name="选项列表")),
                (
                    "correct_answer",
                    models.CharField(max_length=1, verbose_name="正确答案"),
                ),
                (
                    "score",
                    models.PositiveIntegerField(default=10, verbose_name="题目分值"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="题目顺序"),
                ),
            ],
            options={
                "db_table": "experiment_choice_problem",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CodingProblem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(verbose_name="题目描述")),
                ("test_cases", models.JSONField(verbose_name="测试用例列表")),
                (
                    "timeout",
                    models.IntegerField(default=10, verbose_name="超时时间(秒)"),
                ),
                (
                    "mem_limit",
                    models.IntegerField(default=512, verbose_name="内存限制(MB)"),
                ),
                ("last_submission_status", models.JSONField(blank=True, null=True)),
                (
                    "score",
                    models.PositiveIntegerField(default=10, verbose_name="题目分值"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="题目顺序"),
                ),
            ],
            options={
                "db_table": "experiment_coding_problem",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Experiment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="实验标题")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="实验描述"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="开始时间"
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="截止时间"
                    ),
                ),
                ("allow_late_submission", models.BooleanField(default=False)),
                ("late_submission_penalty", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "experiment_experiment",
            },
        ),
        migrations.CreateModel(
            name="FillProblem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="问题描述")),
                (
                    "correct_answer",
                    models.CharField(max_length=200, verbose_name="正确答案"),
                ),
                (
                    "score",
                    models.PositiveIntegerField(default=10, verbose_name="题目分值"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="题目顺序"),
                ),
            ],
            options={
                "db_table": "experiment_fill_problem",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("is_passed", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="TestResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("test_case_input", models.TextField(verbose_name="测试用例输入")),
                ("expected_output", models.TextField(verbose_name="预期输出")),
                ("actual_output", models.TextField(verbose_name="实际输出")),
                (
                    "is_passed",
                    models.BooleanField(default=False, verbose_name="是否通过"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "answer_text",
                    models.TextField(blank=True, null=True, verbose_name="答案文本"),
                ),
                ("code", models.TextField(blank=True, null=True, verbose_name="代码")),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="answer_files/",
                        verbose_name="上传文件",
                    ),
                ),
                (
                    "is_passed",
                    models.BooleanField(default=False, verbose_name="是否通过"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CodingSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.TextField(verbose_name="提交代码")),
                ("passed_count", models.IntegerField(verbose_name="通过用例数")),
                ("total_count", models.IntegerField(verbose_name="总用例数")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="提交时间"),
                ),
                (
                    "details",
                    models.JSONField(
                        blank=True, null=True, verbose_name="详细测试结果"
                    ),
                ),
                (
                    "coding_problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="experiments.codingproblem",
                        verbose_name="对应编程题",
                    ),
                ),
            ],
            options={
                "db_table": "experiment_coding_submission",
            },
        ),
    ]
