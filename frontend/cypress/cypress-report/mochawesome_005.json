{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-29T08:13:23.457Z",
    "end": "2025-08-29T08:13:41.788Z",
    "duration": 18331,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "35393517-89e0-40cf-921d-a3a42377cd05",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4598,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com');\ncy.get('.action-email').should('have.value', 'fake@email.com');\n// .type() with special character sequences\ncy.get('.action-email').type('{leftarrow}{rightarrow}{uparrow}{downarrow}');\ncy.get('.action-email').type('{del}{selectall}{backspace}');\n// .type() with key modifiers\ncy.get('.action-email').type('{alt}{option}'); // these are equivalent\ncy.get('.action-email').type('{ctrl}{control}'); // these are equivalent\ncy.get('.action-email').type('{meta}{command}{cmd}'); // these are equivalent\ncy.get('.action-email').type('{shift}');\n// Delay each keypress by 0.1 sec\ncy.get('.action-email').type('slow.typing@email.com', {\n  delay: 100\n});\ncy.get('.action-email').should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n});\ncy.get('.action-disabled').should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "078f0aea-7583-40f3-8ec9-84efe08ed6c1",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus();\ncy.get('.action-focus').should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "ae167808-f3bc-4fab-8f4b-f9afd0cc4a7d",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 549,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur');\ncy.get('.action-blur').blur();\ncy.get('.action-blur').should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "36054164-e8f7-44cd-82bd-bf2090e12832",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 664,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text');\ncy.get('.action-clear').should('have.value', 'Clear this text');\ncy.get('.action-clear').clear();\ncy.get('.action-clear').should('have.value', '');",
              "err": {},
              "uuid": "d3a756f6-bc89-4300-9d6b-7cab00aba971",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 549,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit();\ncy.get('.action-form').next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "4ab624a9-4586-4334-8d35-4dc5ae299329",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2239,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas');\ncy.get('#action-canvas').click(80, 75); // click 80px on x coord and 75px on y coord\ncy.get('#action-canvas').click(170, 75);\ncy.get('#action-canvas').click(80, 165);\ncy.get('#action-canvas').click(100, 185);\ncy.get('#action-canvas').click(125, 190);\ncy.get('#action-canvas').click(150, 185);\ncy.get('#action-canvas').click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "f7552ad7-f472-40fb-a64d-ec7eb09e87de",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick();\ncy.get('.action-div').should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "4c11437b-168b-49b7-8e18-3512dd1e0572",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick();\ncy.get('.rightclick-action-div').should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "65f167f1-b27d-4d44-af26-f9473c745ec1",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1045,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check();\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check();\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1');\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']);\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n});\ncy.get('.action-checkboxes [disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n});\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');",
              "err": {},
              "uuid": "c91e37e6-7056-4d01-8572-25824e4c5117",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck();\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1');\ncy.get('.action-check [type=\"checkbox\"]').uncheck('checkbox1');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"]').uncheck(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox3\"]').should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n});\ncy.get('.action-check [disabled]').should('not.be.checked');",
              "err": {},
              "uuid": "20936ab2-f209-4bfb-a946-bc03969b05da",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']);\ncy.get('.action-select-multiple')\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas');\ncy.get('.action-select')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']);\ncy.get('.action-select-multiple').invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "27dfbf69-0111-43ed-9956-c57a36e31742",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView();\ncy.get('#scroll-horizontal button').should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView();\ncy.get('#scroll-vertical button').should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView();\ncy.get('#scroll-both button').should('be.visible');",
              "err": {},
              "uuid": "cbd091be-08eb-46bc-9338-876fd4f89330",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25);\ncy.get('.trigger-input-range').trigger('change');\ncy.get('.trigger-input-range').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "677f9aff-def4-42b1-8d36-9ed6d739e0dd",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2333,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "c543361e-9ef5-4c1a-b2b2-2d87b884b120",
              "parentUUID": "f6f2c139-f7f5-4b7f-90dc-df56a96e36a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "078f0aea-7583-40f3-8ec9-84efe08ed6c1",
            "ae167808-f3bc-4fab-8f4b-f9afd0cc4a7d",
            "36054164-e8f7-44cd-82bd-bf2090e12832",
            "d3a756f6-bc89-4300-9d6b-7cab00aba971",
            "4ab624a9-4586-4334-8d35-4dc5ae299329",
            "f7552ad7-f472-40fb-a64d-ec7eb09e87de",
            "4c11437b-168b-49b7-8e18-3512dd1e0572",
            "65f167f1-b27d-4d44-af26-f9473c745ec1",
            "c91e37e6-7056-4d01-8572-25824e4c5117",
            "20936ab2-f209-4bfb-a946-bc03969b05da",
            "27dfbf69-0111-43ed-9956-c57a36e31742",
            "cbd091be-08eb-46bc-9338-876fd4f89330",
            "677f9aff-def4-42b1-8d36-9ed6d739e0dd",
            "c543361e-9ef5-4c1a-b2b2-2d87b884b120"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16291,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/cypress-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}